Option Explicit

' Windows API declarations for keyboard events and other required functions
Private Declare PtrSafe Sub keybd_event Lib "user32" (ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As Long, ByVal dwExtraInfo As Long)
Private Declare PtrSafe Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr
Private Declare PtrSafe Function SetForegroundWindow Lib "user32" (ByVal hwnd As LongPtr) As Long
Private Declare PtrSafe Function ShowWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal nCmdShow As Long)
Private Declare PtrSafe Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)

' Constants
Private Const SW_MAXIMIZE As Long = 3
Private Const VK_CONTROL As Byte = &H11
Private Const VK_P As Byte = &H50
Private Const VK_RETURN As Byte = &HD
Private Const VK_TAB As Byte = &H09
Private Const KEYEVENTF_KEYUP As Long = &H2

Sub OpenChromeAndPrint()
    Dim name As String
    Dim downloadPath As String
    Dim chromePath As String
    Dim hwnd As LongPtr

    ' Define the Chrome executable path
    chromePath = """C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"""

    ' Define the download path where PDFs will be saved
    downloadPath = "C:\Screenshots"

    ' Ensure folder exists or create it
    If Dir(downloadPath, vbDirectory) = "" Then
        MkDir downloadPath
    End If

    ' Open Chrome freshly with a blank tab
    Shell chromePath & " --new-window", vbNormalFocus
    Sleep 5000 ' Wait for Chrome to launch

    ' Find the window handle for Chrome (after opening)
    hwnd = FindWindow("Chrome_WidgetWin_1", vbNullString)
    
    ' If Chrome is found, bring it to the foreground and maximize it
    If hwnd <> 0 Then
        ShowWindow hwnd, SW_MAXIMIZE
        SetForegroundWindow hwnd
        Sleep 2000 ' Wait for Chrome to be maximized

        ' Navigate to a fake search to avoid session restore
        SendKeys "^l", True ' Focus on the address bar
        Sleep 1000
        SendKeys "https://www.google.com/search?q=person1", True ' Fake search
        Sleep 1000
        keybd_event VK_RETURN, 0, 0, 0 ' Press Enter to navigate
        keybd_event VK_RETURN, 0, KEYEVENTF_KEYUP, 0
        WaitForBrowserToRespond
        Sleep 1000 ' Wait for the fake page to load

        ' Close the fake tab
        SendKeys "^w", True ' Close fake tab
        Sleep 1000

        ' Start the real searches using Excel
        ProcessNamesFromExcel "C:\Users\DELL\Desktop\ExcelVBA.xlsm", downloadPath

    Else
        MsgBox "Chrome window not found."
    End If
End Sub

Sub ProcessNamesFromExcel(excelPath As String, downloadPath As String)
    Dim wb As Workbook
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim searchName As String
    Dim i As Long
    Dim hwnd As LongPtr

    ' Open the workbook and worksheet
    Set wb = Workbooks.Open(excelPath)
    Set ws = wb.Sheets(1) ' Assuming names are in the first sheet

    ' Get the last row with data in column A
    lastRow = ws.Cells(ws.Rows.Count, "A").End(xlUp).Row

    ' Loop through each name in the Excel file
    For i = 1 To lastRow
        searchName = ws.Cells(i, 1).Value

        ' Navigate to the URL using the real search name
        SendKeys "^t", True ' Open new tab
        Sleep 1000
        SendKeys "^l", True ' Focus address bar
        Sleep 1000
        SendKeys "https://www.google.com/search?q=" & Replace(searchName, " ", "+"), True
        Sleep 1000
        keybd_event VK_RETURN, 0, 0, 0 ' Press Enter to navigate
        keybd_event VK_RETURN, 0, KEYEVENTF_KEYUP, 0
        WaitForBrowserToRespond ' Wait until browser responds and page is loaded

        ' Simulate Tab key presses to navigate the website and hit Enter
        keybd_event VK_TAB, 0, 0, 0 ' First Tab
        keybd_event VK_TAB, 0, KEYEVENTF_KEYUP, 0
        Sleep 1000
        keybd_event VK_TAB, 0, 0, 0 ' Second Tab
        keybd_event VK_TAB, 0, KEYEVENTF_KEYUP, 0
        Sleep 1000
        keybd_event VK_RETURN, 0, 0, 0 ' Press Enter to activate the highlighted button
        keybd_event VK_RETURN, 0, KEYEVENTF_KEYUP, 0
        Sleep 2000

        ' Simulate Ctrl + P to open Print dialog
        keybd_event VK_CONTROL, 0, 0, 0
        keybd_event VK_P, 0, 0, 0
        keybd_event VK_P, 0, KEYEVENTF_KEYUP, 0
        keybd_event VK_CONTROL, 0, KEYEVENTF_KEYUP, 0
        Sleep 3000 ' Allow time for the Print dialog to open
        
        ' Press Enter to confirm Print dialog
        keybd_event VK_RETURN, 0, 0, 0
        keybd_event VK_RETURN, 0, KEYEVENTF_KEYUP, 0
        Sleep 3000 ' Wait for Print dialog to process

        ' Simulate typing the file name and pressing Enter
        SaveFileDialog downloadPath & "\" & Replace(searchName, " ", "_") & ".pdf"

        ' Wait for the file to be saved
        Sleep 5000
        
        ' Close the current tab after printing is complete
        SendKeys "^w", True ' Close tab
        Sleep 1000
    Next i

    MsgBox "All searches completed!"
End Sub

' Wait for browser to respond
Sub WaitForBrowserToRespond()
    Dim hwnd As LongPtr
    hwnd = FindWindow("Chrome_WidgetWin_1", vbNullString)
    
    ' Wait in a loop until the browser window is responding
    Do While hwnd = 0
        Sleep 1000 ' Wait for 1 second
        hwnd = FindWindow("Chrome_WidgetWin_1", vbNullString) ' Recheck if the window is responding
    Loop
End Sub

' Handle Save As dialog to type the file name and press Enter
Sub SaveFileDialog(fileName As String)
    ' Wait for the Save As dialog to appear
    Sleep 3000
    
    ' Type the filename into the dialog box
    SendKeys fileName, True
    
    ' Simulate pressing Enter to save the file
    Sleep 1000
    keybd_event VK_RETURN, 0, 0, 0
    keybd_event VK_RETURN, 0, KEYEVENTF_KEYUP, 0
End Sub
